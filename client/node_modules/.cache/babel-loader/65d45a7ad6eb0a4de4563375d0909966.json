{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionAsync() {\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["E:/dev/toplus-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","then","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AAEtC,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMX,IAAI,CAACE,+BAAD,EAAkCO,QAAlC,CAAjC;AAEAF,EAAAA,aAAa,CACVG,GADH,GAEGE,IAFH,CAEQH,QAAQ,IAAI;AAChB,UAAME,cAAc,GAAGT,+BAA+B,CAACO,QAAD,CAAtD;AACAI,IAAAA,QAAQ,CAACV,uBAAuB,CAACQ,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,KAAK,IAAIF,QAAQ,CAACT,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,SAAS,CACbM,eAAe,CAACa,uBADH,EAEbZ,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure\r\n} from \"./shop.actions\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n\r\n  const collectionRef = firestore.collection(\"collections\");\r\n  const snapshot = yield collectionRef.get();\r\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); \r\n\r\n  collectionRef\r\n    .get()\r\n    .then(snapshot => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}